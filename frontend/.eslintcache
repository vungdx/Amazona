[{"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\App.js":"1","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reportWebVitals.js":"2","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\index.js":"3","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\Product.js":"4","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\Rating.js":"5","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\data.js":"6","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProductScreen.js":"7","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\HomeScreen.js":"8","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\LoadingBox.js":"9","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\MessageBox.js":"10","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\store.js":"11","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\productReducers.js":"12","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\productActions.js":"13","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\CartScreen.js":"14","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\productConstants.js":"15","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\cartReducers.js":"16","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\cartConstants.js":"17","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\cartActions.js":"18","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\SigninScreen.js":"19","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\userReducers.js":"20","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\userConstants.js":"21","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\userActions.js":"22","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\RegisterScreen.js":"23","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ShippingAddressScreen.js":"24","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\CheckoutSteps.js":"25","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\PaymentMethodScreen.js":"26","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\PlaceOrderScreen.js":"27","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\orderActions.js":"28","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\orderConstants.js":"29","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\orderReducers.js":"30","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\OrderScreen.js":"31","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProfileScreen.js":"32","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\PrivateRoute.js":"33","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\AdminRoute.js":"34","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProductListScreen.js":"35","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProductEditScreen.js":"36","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\OrderListScreen.js":"37","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\UserListScreen.js":"38","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\UserEditScreen.js":"39","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\SellerRoute.js":"40","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\SearchBox.js":"41","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\SearchScreen.js":"42","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\SupportScreen.js":"43","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\ChatBox.js":"44"},{"size":6291,"mtime":1622354593715,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1609743600227,"results":"47","hashOfConfig":"46"},{"size":616,"mtime":1612355946859,"results":"48","hashOfConfig":"46"},{"size":710,"mtime":1615703510050,"results":"49","hashOfConfig":"46"},{"size":967,"mtime":1612023103216,"results":"50","hashOfConfig":"46"},{"size":1719,"mtime":1612022329324,"results":"51","hashOfConfig":"46"},{"size":7241,"mtime":1618995220697,"results":"52","hashOfConfig":"46"},{"size":999,"mtime":1617709195511,"results":"53","hashOfConfig":"46"},{"size":281,"mtime":1613200935765,"results":"54","hashOfConfig":"46"},{"size":205,"mtime":1617728998223,"results":"55","hashOfConfig":"46"},{"size":1938,"mtime":1622353441402,"results":"56","hashOfConfig":"46"},{"size":3916,"mtime":1618682691274,"results":"57","hashOfConfig":"46"},{"size":4984,"mtime":1618887198736,"results":"58","hashOfConfig":"46"},{"size":2991,"mtime":1619083360216,"results":"59","hashOfConfig":"46"},{"size":1942,"mtime":1618676404008,"results":"60","hashOfConfig":"46"},{"size":1081,"mtime":1620123052313,"results":"61","hashOfConfig":"46"},{"size":283,"mtime":1614092772438,"results":"62","hashOfConfig":"46"},{"size":1194,"mtime":1620122464773,"results":"63","hashOfConfig":"46"},{"size":1992,"mtime":1617815584113,"results":"64","hashOfConfig":"46"},{"size":3555,"mtime":1617510158180,"results":"65","hashOfConfig":"46"},{"size":1546,"mtime":1617510078381,"results":"66","hashOfConfig":"46"},{"size":5223,"mtime":1617728991563,"results":"67","hashOfConfig":"46"},{"size":2689,"mtime":1615481884576,"results":"68","hashOfConfig":"46"},{"size":2734,"mtime":1617815571274,"results":"69","hashOfConfig":"46"},{"size":510,"mtime":1613202789622,"results":"70","hashOfConfig":"46"},{"size":1686,"mtime":1619864844138,"results":"71","hashOfConfig":"46"},{"size":4746,"mtime":1620267436357,"results":"72","hashOfConfig":"46"},{"size":2246,"mtime":1620261057476,"results":"73","hashOfConfig":"46"},{"size":640,"mtime":1616917885694,"results":"74","hashOfConfig":"46"},{"size":1502,"mtime":1616921754923,"results":"75","hashOfConfig":"46"},{"size":4104,"mtime":1617953149279,"results":"76","hashOfConfig":"46"},{"size":4781,"mtime":1617635808818,"results":"77","hashOfConfig":"46"},{"size":496,"mtime":1615139486274,"results":"78","hashOfConfig":"46"},{"size":510,"mtime":1615650591118,"results":"79","hashOfConfig":"46"},{"size":4129,"mtime":1622354027333,"results":"80","hashOfConfig":"46"},{"size":5693,"mtime":1617379332055,"results":"81","hashOfConfig":"46"},{"size":2478,"mtime":1617640238629,"results":"82","hashOfConfig":"46"},{"size":2506,"mtime":1617510835670,"results":"83","hashOfConfig":"46"},{"size":3234,"mtime":1617513460880,"results":"84","hashOfConfig":"46"},{"size":483,"mtime":1617528104775,"results":"85","hashOfConfig":"46"},{"size":666,"mtime":1618650935969,"results":"86","hashOfConfig":"46"},{"size":2321,"mtime":1619834299595,"results":"87","hashOfConfig":"46"},{"size":5186,"mtime":1620496173664,"results":"88","hashOfConfig":"46"},{"size":3022,"mtime":1620495167824,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p4yliu",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\App.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reportWebVitals.js",[],["189","190"],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\index.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\Product.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\Rating.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\data.js",[],["191","192"],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProductScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\HomeScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\LoadingBox.js",["193"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nLoadingBox.propTypes = {};\r\n\r\nfunction LoadingBox(props) {\r\n  return (\r\n    <div className=\"loading\">\r\n      <i className=\"fa fa-spinner fa-spin\"></i> Loading...\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingBox;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\MessageBox.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\store.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\productReducers.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\productActions.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\CartScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\productConstants.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\cartConstants.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\cartActions.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\SigninScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\userReducers.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\userConstants.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\userActions.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\RegisterScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ShippingAddressScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\CheckoutSteps.js",["194"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nCheckoutSteps.propTypes = {};\r\n\r\nfunction CheckoutSteps(props) {\r\n  return (\r\n    <div className=\"row checkout-steps\">\r\n      <div className={props.step1 ? \"active\" : \"\"}>Sign-In</div>\r\n      <div className={props.step2 ? \"active\" : \"\"}>Shipping</div>\r\n      <div className={props.step3 ? \"active\" : \"\"}>Payment</div>\r\n      <div className={props.step4 ? \"active\" : \"\"}>Place Order</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\PaymentMethodScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\actions\\orderActions.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\constants\\orderConstants.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\OrderScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProfileScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\PrivateRoute.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\AdminRoute.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProductListScreen.js",["195","196"],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\ProductEditScreen.js",["197"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsProduct, updateProduct } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nProductEditScreen.propTypes = {};\r\n\r\nfunction ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(\"/productlist\");\r\n    }\r\n    if (!product || product._id !== productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProduct(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setBrand(product.brand);\r\n      setDescription(product.description);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        category,\r\n        brand,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const [loadingUpload, setLoadingUpload] = useState(false);\r\n  const [errorUpload, setErrorUpload] = useState(\"\");\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append(\"image\", file);\r\n    setLoadingUpload(true);\r\n    try {\r\n      const { data } = await axios.post(\"/api/uploads\", bodyFormData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      setImage(data);\r\n      setLoadingUpload(false);\r\n    } catch (error) {\r\n      setErrorUpload(error.message);\r\n      setLoadingUpload(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input id=\"name\" type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e) => setName(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input id=\"price\" type=\"text\" placeholder=\"Enter price\" value={price} onChange={(e) => setPrice(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"image\">Image</label>\r\n              <input id=\"image\" type=\"text\" placeholder=\"Enter image\" value={image} onChange={(e) => setImage(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"imageFile\">Image File</label>\r\n              <input type=\"file\" id=\"imageFile\" label=\"Choose Image\" onChange={uploadFileHandler}></input>\r\n              {loadingUpload && <LoadingBox></LoadingBox>}\r\n              {errorUpload && <MessageBox variant=\"danger\">{errorUpload}</MessageBox>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category\">Category</label>\r\n              <input id=\"category\" type=\"text\" placeholder=\"Enter category\" value={category} onChange={(e) => setCategory(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input id=\"brand\" type=\"text\" placeholder=\"Enter brand\" value={brand} onChange={(e) => setBrand(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"countInStock\">Count In Stock</label>\r\n              <input id=\"countInStock\" type=\"text\" placeholder=\"Enter countInStock\" value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea id=\"description\" rows=\"3\" type=\"text\" placeholder=\"Enter description\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n            </div>\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\OrderListScreen.js",["198"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nOrderListScreen.propTypes = {};\r\n\r\nfunction OrderListScreen(props) {\r\n  const sellerMode = props.match.path.indexOf(\"/seller\") >= 0;\r\n  const dispatch = useDispatch();\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n  useEffect(() => {\r\n    dispatch(listOrders({ seller: sellerMode ? userInfo._id : \"\" }));\r\n  }, [dispatch, sellerMode, userInfo._id]);\r\n  const deleteHandler = (order) => {};\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>{order.totalPrice.toFixed(2)}</td>\r\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : \"No\"}</td>\r\n                <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : \"No\"}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  <button type=\"button\" className=\"small\" onClick={() => deleteHandler(order)}>\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\UserListScreen.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\UserEditScreen.js",["199"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsUser, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nUserEditScreen.propTypes = {};\r\n\r\nfunction UserEditScreen(props) {\r\n  const userId = props.match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isSeller, setIsSeller] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      props.history.push(\"/userlist\");\r\n    }\r\n    if (!user) {\r\n      dispatch(detailsUser(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsSeller(user.isSeller);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, user, userId, successUpdate, props.history]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateUser({\r\n        _id: userId,\r\n        name,\r\n        email,\r\n        isSeller,\r\n        isAdmin,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit User {name}</h1>\r\n          {loadingUpdate && <LoadingBox></LoadingBox>}\r\n          {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox></MessageBox>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input id=\"name\" type=\"text\" placeholder=\"Enter name\" value={name} onChange={(e) => setName(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input id=\"email\" type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isSeller\">Is Seller</label>\r\n              <input id=\"isSeller\" type=\"checkbox\" placeholder=\"Enter email\" checked={isSeller} onChange={(e) => setIsSeller(e.target.checked)}></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"isAdmin\">Is Admin</label>\r\n              <input id=\"isAdmin\" type=\"checkbox\" placeholder=\"Enter email\" checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></input>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"primary\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\SellerRoute.js",[],"E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\SearchBox.js",["200"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nSearchBox.propTypes = {};\r\n\r\nfunction SearchBox(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    props.history.push(`/search/name/${name}`);\r\n  };\r\n  return (\r\n    <form className=\"search\" onSubmit={submitHandler}>\r\n      <div className=\"row\">\r\n        <input type=\"text\" name=\"q\" id=\"q\" onChange={(e) => setName(e.target.value)}></input>\r\n        <button className=\"primary\" type=\"submit\">\r\n          <i className=\"fa fa-search\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\SearchScreen.js",["201"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport Product from \"../components/Product\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nSearchScreen.propTypes = {};\r\n\r\nfunction SearchScreen(props) {\r\n  const { name = \"all\", pageNumber = 1 } = useParams();\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts({ pageNumber, name: name !== \"all\" ? name : \"\" }));\r\n  }, [dispatch, name, pageNumber]);\r\n\r\n  const getFilterUrl = (filter) => {\r\n    const filterPage = filter.page || pageNumber;\r\n    return `/search/page/${filterPage}`;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"row\">{loading ? <LoadingBox></LoadingBox> : error ? <MessageBox variant=\"danger\">{error}</MessageBox> : <div>{products.length} Results</div>}</div>\r\n      <div className=\"row top\">\r\n        <div className=\"col-1\">\r\n          <h3>Department</h3>\r\n          <ul>\r\n            <li>Category 1</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-3\">\r\n          {loading ? (\r\n            <LoadingBox></LoadingBox>\r\n          ) : error ? (\r\n            <MessageBox variant=\"danger\">{error}</MessageBox>\r\n          ) : (\r\n            <>\r\n              {products.length === 0 && <MessageBox>No product Found</MessageBox>}\r\n              <div className=\"row center\">\r\n                {products.map((product) => (\r\n                  <Product key={product._id} product={product}></Product>\r\n                ))}\r\n              </div>\r\n              <div className=\"row center pagination\">\r\n                {[...Array(pages).keys()].map((x) => (\r\n                  <Link className={x + 1 === page ? \"active\" : \"\"} key={x + 1} to={getFilterUrl({ page: x + 1 })}>\r\n                    {x + 1}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchScreen;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\screens\\SupportScreen.js",["202"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nSupportScreen.propTypes = {};\r\n\r\nlet allUsers = [];\r\nlet allMessages = [];\r\nlet allSelectedUser = {};\r\nconst ENDPOINT = window.location.host.indexOf(\"localhost\") >= 0 ? \"http://127.0.0.1:5000\" : window.location.host;\r\nfunction SupportScreen(props) {\r\n  const [selectedUser, setSelectedUser] = useState({});\r\n  const [socket, setSocket] = useState(null);\r\n  const uiMessagesRef = useRef(null);\r\n  const [messageBody, setMessageBody] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  useEffect(() => {\r\n    if (uiMessagesRef.current) {\r\n      uiMessagesRef.current.scrollBy({\r\n        top: uiMessagesRef.current.clientHeight,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n    if (!socket) {\r\n      const sk = socketIOClient(ENDPOINT);\r\n      setSocket(sk);\r\n      sk.emit(\"onLogin\", {\r\n        _id: userInfo._id,\r\n        name: userInfo.name,\r\n        isAdmin: userInfo.isAdmin,\r\n      });\r\n      sk.on(\"message\", (data) => {\r\n        if (allSelectedUser._id === data._id) {\r\n          allMessages = [...allMessages, data];\r\n        } else {\r\n          const existUser = allUsers.find((user) => user._id === data._id);\r\n          if (existUser) {\r\n            allUsers = allUsers.map((user) => (user._id === existUser._id ? { ...user, unread: true } : user));\r\n            setUsers(allUsers);\r\n          }\r\n        }\r\n        setMessages(allMessages);\r\n      });\r\n      sk.on(\"updateUser\", (updatedUser) => {\r\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\r\n        if (existUser) {\r\n          allUsers = allUsers.map((user) => (user._id === existUser._id ? updatedUser : user));\r\n          setUsers(allUsers);\r\n        } else {\r\n          allUsers = [...allUsers, updatedUser];\r\n          setUsers(allUsers);\r\n        }\r\n      });\r\n      sk.on(\"listUsers\", (updatedUsers) => {\r\n        allUsers = updatedUsers;\r\n        setUsers(allUsers);\r\n      });\r\n      sk.on(\"selectUser\", (user) => {\r\n        allMessages = user.messages;\r\n        setMessages(allMessages);\r\n      });\r\n    }\r\n  }, [messages, socket, users]);\r\n\r\n  const selectUser = (user) => {\r\n    allSelectedUser = user;\r\n    setSelectedUser(allSelectedUser);\r\n    const existUser = allUsers.find((x) => x._id === user._id);\r\n    if (existUser) {\r\n      allUsers = allUsers.map((x) => (x._id === existUser._id ? { ...x, unread: false } : x));\r\n      setUsers(allUsers);\r\n    }\r\n    socket.emit(\"onUserSelected\", user);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!messageBody.trim()) {\r\n      alert(\"Error. Please type message.\");\r\n    } else {\r\n      allMessages = [\r\n        ...allMessages,\r\n        {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n        },\r\n      ];\r\n      setMessages(allMessages);\r\n      setMessageBody(\"\");\r\n      setTimeout(() => {\r\n        socket.emit(\"onMessage\", {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n          isAdmin: userInfo.isAdmin,\r\n          _id: selectedUser._id,\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row top full-container\">\r\n      <div className=\"col-1 support-users\">\r\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && <MessageBox>No Online User Found</MessageBox>}\r\n        <ul>\r\n          {users\r\n            .filter((x) => x._id !== userInfo._id)\r\n            .map((user) => (\r\n              <li key={user._id} className={user._id === selectedUser._id ? \" selected\" : \"\"}>\r\n                <button className=\"block\" type=\"button\" onClick={() => selectUser(user)}>\r\n                  {user.name}\r\n                </button>\r\n                <span className={user.unread ? \"unread\" : user.online ? \"online\" : \"offline\"}></span>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"col-3 support-messages\">\r\n        {!selectedUser._id ? (\r\n          <MessageBox>Select a user to start chat</MessageBox>\r\n        ) : (\r\n          <div>\r\n            <div className=\"row\">\r\n              <strong>Chat with {selectedUser.name}</strong>\r\n            </div>\r\n            <ul ref={uiMessagesRef}>\r\n              {messages.length === 0 && <li>No Message.</li>}\r\n              {messages.map((msg, index) => (\r\n                <li key={index}>\r\n                  <strong>{`${msg.name}: `}</strong>\r\n                  {msg.body}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div>\r\n              <form onSubmit={submitHandler} className=\"row\">\r\n                <input value={messageBody} onChange={(e) => setMessageBody(e.target.value)} type=\"text\" placeholder=\"type message\" />\r\n                <button type=\"submit\">Send</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SupportScreen;\r\n","E:\\WORKSPACE\\MERN STACK\\amazona\\frontend\\src\\components\\ChatBox.js",["203","204"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nChatBox.propTypes = {};\r\nconst ENDPOINT = window.location.host.indexOf(\"localhost\") >= 0 ? \"http://127.0.0.1:5000\" : window.location.host;\r\n\r\nfunction ChatBox(props) {\r\n  const { userInfo } = props;\r\n  const [socket, setSocket] = useState(null);\r\n  const uiMessagesRef = useRef(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageBody, setMessageBody] = useState(\"\");\r\n  const [messages, setMessages] = useState([{ name: \"Admin\", body: \"Hello there, Please ask you question.\" }]);\r\n  useEffect(() => {\r\n    if (uiMessagesRef.current) {\r\n      uiMessagesRef.current.scrollBy({\r\n        top: uiMessagesRef.current.clientHeight,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n    if (socket) {\r\n      socket.emit(\"onLogin\", {\r\n        _id: userInfo._id,\r\n        name: userInfo.name,\r\n        isAdmin: userInfo.isAdmin,\r\n      });\r\n      socket.on(\"message\", (data) => {\r\n        setMessages([\r\n          ...messages,\r\n          {\r\n            body: data.body,\r\n            name: data.name,\r\n          },\r\n        ]);\r\n      });\r\n    }\r\n  }, [messages, isOpen, socket]);\r\n\r\n  const supportHandler = () => {\r\n    setIsOpen(true);\r\n    const sk = socketIOClient(ENDPOINT);\r\n    setSocket(sk);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!messageBody.trim()) {\r\n      alert(\"Error. Please type message.\");\r\n    } else {\r\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\r\n      setMessageBody(\"\");\r\n      setTimeout(() => {\r\n        socket.emit(\"onMessage\", {\r\n          body: messageBody,\r\n          name: userInfo.name,\r\n          isAdmin: userInfo.isAdmin,\r\n          _id: userInfo._id,\r\n        });\r\n      }, 1000);\r\n    }\r\n  };\r\n  const closeHandler = () => {\r\n    setIsOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"chatbox\">\r\n      {!isOpen ? (\r\n        <button type=\"button\" onClick={supportHandler}>\r\n          <i className=\"fa fa-support\"></i>\r\n        </button>\r\n      ) : (\r\n        <div className=\"card card-body\">\r\n          <div className=\"row\">\r\n            <strong>Support</strong>\r\n            <button type=\"button\" onClick={closeHandler}>\r\n              <i className=\"fa fa-close\"></i>\r\n            </button>\r\n          </div>\r\n          <ul ref={uiMessagesRef}>\r\n            {messages.map((msg, index) => (\r\n              <li key={index}>\r\n                <strong>{`${msg.name}: `}</strong>\r\n                {msg.body}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div>\r\n            <form onSubmit={submitHandler} className=\"row\">\r\n              <input value={messageBody} onChange={(e) => setMessageBody(e.target.value)} type=\"text\" placeholder=\"text message\"></input>\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"215","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":70,"column":6,"nodeType":"218","endLine":70,"endColumn":31,"suggestions":"219"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":39,"column":6,"nodeType":"218","endLine":39,"endColumn":32,"suggestions":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],["221"],["222"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'Product' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userInfo._id', 'userInfo.isAdmin', and 'userInfo.name'. Either include them or remove the dependency array.","ArrayExpression",["223"],["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [messages, socket, userInfo._id, userInfo.isAdmin, userInfo.name, users]",{"range":"229","text":"230"},"Update the dependencies array to be: [messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]",{"range":"231","text":"232"},[2412,2437],"[messages, socket, userInfo._id, userInfo.isAdmin, userInfo.name, users]",[1226,1252],"[messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]"]